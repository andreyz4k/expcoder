{
    "0f39a9d9.json": [
        [
            "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7, $v8, $v9 = rev($v3 = (rev_grid_elements $v7 $v8 $v9)) in",
            "let $v10 = rev($v7 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v10)) in",
            "let $v11 = rev($v10 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v11)) in",
            "let $v12 = rev($v11 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v12)) in",
            "let $v13, $v14, $v15 = rev($v12 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v13)) $v14 $v15) $v13 (lambda Const(set(tuple2(int, int)), Set([(0, 0), (0, 2), (2, 0), (1, 1), (0, 1), (2, 2), (2, 1)]))))) in",
            "let $v16 = Const(int, 1) in",
            "let $v17 = (map_set (lambda (tuple2 (tuple2 (tuple2 (+ (tuple2_first (tuple2_first (tuple2_first $0))) $v16) (tuple2_second (tuple2_first (tuple2_first $0)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v14) in",
            "let $v18 = (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v13)) $v17 $v15) in",
            "let $v19 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v18) in",
            "let $v20 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v19) in",
            "let $v21 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v20) in",
            "let $v22 = (rev_grid_elements $v21 $v8 $v9) in",
            "let $v23 = (repeat_grid $v4 $v5 $v6) in",
            "(rev_select_grid (lambda (eq? $0 $v1)) $v23 $v22)"
        ],
        [
            "let $v1, $v2, $v3 = rev($inp0 = (#(lambda (lambda (lambda (rev_fix_param (rev_select_grid (lambda (eq? $0 $3)) $1 $0) $2 (lambda Const(color, 0)))))) $v1 $v2 $v3)) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7 = (repeat_grid $v4 $v5 $v6) in",
            "let $v8, $v9, $v10 = rev($v3 = (#(lambda (lambda (lambda (#(lambda (lambda (lambda (rev_grid_elements (#(lambda (lambda (lambda (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- ($7 (tuple2_first $0)) ($7 (tuple2_first $2)))) 1)) (not (gt? (abs (- ($6 (tuple2_first $0)) ($6 (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $0))))) (lambda (tuple2_first $0)) (lambda (tuple2_second $0)) $2) $1 $0)))) (#(lambda (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $0)) $2) $1 $0)))) $v8 $v9 $v10)) in",
            "let $v11, $v12, $v13 = rev($v8 = (rev_fix_param (#(lambda (lambda (lambda (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $3)) $1 $0)))) $v11 $v12 $v13) $v11 (lambda Const(set(tuple2(int, int)), Set([(0, 0), (1, 1), (2, 0), (0, 1), (0, 2), (2, 2), (2, 1)]))))) in",
            "let $v14 = (#(lambda (lambda (lambda (#(lambda (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $0)) (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $3)) (map_set (lambda (tuple2 (tuple2 (tuple2 (+ (tuple2_first (tuple2_first (tuple2_first $0))) Const(int, 1)) (tuple2_second (tuple2_first (tuple2_first $0)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $1) $0))))) $v11 $v12 $v13) in",
            "let $v15 = (#(lambda (lambda (lambda (rev_grid_elements (#(lambda (lambda (lambda (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- ($7 (tuple2_first $0)) ($7 (tuple2_first $2)))) 1)) (not (gt? (abs (- ($6 (tuple2_first $0)) ($6 (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $0))))) (lambda (tuple2_first $0)) (lambda (tuple2_second $0)) $2) $1 $0)))) $v14 $v9 $v10) in",
            "(#(lambda (lambda (lambda (rev_select_grid (lambda (eq? $0 $3)) $1 $0)))) $v1 $v7 $v15)"
        ]
    ],
    "8b6f1472.json": [
        [
            "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7, $v8, $v9 = rev($v3 = (rev_grid_elements $v7 $v8 $v9)) in",
            "let $v10 = rev($v7 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (not (gt? (+ (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2))))) 1))) $0))) $1 $0))) empty_set $v10)) in",
            "let $v11 = rev($v10 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v11)) in",
            "let $v12 = rev($v11 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v12)) in",
            "let $v13, $v14, $v15 = rev($v12 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v13)) $v14 $v15) $v13 (lambda Const(set(tuple2(int, int)), Set([(0, 0), (0, 2), (2, 0), (1, 1), (0, 1), (2, 2), (2, 1)]))))) in",
            "let $v16 = Const(int, 1) in",
            "let $v17 = (map_set (lambda (tuple2 (tuple2 (tuple2 (+ (tuple2_first (tuple2_first (tuple2_first $0))) $v16) (tuple2_second (tuple2_first (tuple2_first $0)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v14) in",
            "let $v18 = (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v13)) $v17 $v15) in",
            "let $v19 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v18) in",
            "let $v20 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v19) in",
            "let $v21 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (not (gt? (+ (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2))))) 1))) $0))) $1 $0))) empty_set $v20) in",
            "let $v22 = (rev_grid_elements $v21 $v8 $v9) in",
            "let $v23 = (repeat_grid $v4 $v5 $v6) in",
            "(rev_select_grid (lambda (eq? $0 $v1)) $v23 $v22)"
        ]
    ],
    "4c7a5b59.json": [
        [
            "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7 = (repeat_grid $v4 $v5 $v6) in",
            "let $v8, $v9, $v10 = rev($v3 = (rev_grid_elements $v8 $v9 $v10)) in",
            "let $v11 = rev($v8 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v11)) in",
            "let $v12 = rev($v11 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v12)) in",
            "let $v13, $v14, $v15 = rev($v12 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second $0) $v13)) $v14 $v15) $v13 (lambda Const(color, 6)))) in",
            "let $v16 = rev($v14 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v16)) in",
            "let $v17, $v18 = rev($v16 = (map_set (lambda (tuple2 $0 $v17)) $v18)) in",
            "let $v19 = Const(set(tuple2(int, int)), Set([(0, 0), (1, 2), (0, 2), (1, 1), (0, 1), (2, 2), (2, 1), (1, 0)])) in",
            "let $v20 = (map_set (lambda (tuple2_first $0)) $v18) in",
            "let $v21 = (map_set (lambda (tuple2 $0 $v19)) $v20) in",
            "let $v22 = (map_set (lambda (tuple2 $0 $v13)) $v21) in",
            "let $v23 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v22) in",
            "let $v24 = (rev_select_set (lambda (eq? (tuple2_second $0) $v13)) $v23 $v15) in",
            "let $v25 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v24) in",
            "let $v26 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v25) in",
            "let $v27 = (rev_grid_elements $v26 $v9 $v10) in",
            "(rev_select_grid (lambda (eq? $0 $v1)) $v7 $v27)"
        ]
    ],
    "04e912a9.json": [
        [
            "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7 = (repeat_grid $v4 $v5 $v6) in",
            "let $v8, $v9, $v10 = rev($v3 = (rev_grid_elements $v8 $v9 $v10)) in",
            "let $v11 = rev($v8 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v11)) in",
            "let $v12 = rev($v11 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v12)) in",
            "let $v13, $v14, $v15 = rev($v12 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second $0) $v13)) $v14 $v15) $v13 (lambda Const(color, 3)))) in",
            "let $v16 = rev($v14 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v16)) in",
            "let $v17, $v18 = rev($v16 = (map_set (lambda (tuple2 $0 $v17)) $v18)) in",
            "let $v19 = Const(set(tuple2(int, int)), Set([(1, 2), (1, 1), (0, 1), (2, 1), (1, 0)])) in",
            "let $v20 = (map_set (lambda (tuple2_first $0)) $v18) in",
            "let $v21 = (map_set (lambda (tuple2 $0 $v19)) $v20) in",
            "let $v22 = (map_set (lambda (tuple2 $0 $v17)) $v21) in",
            "let $v23 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v22) in",
            "let $v24 = (rev_select_set (lambda (eq? (tuple2_second $0) $v13)) $v23 $v15) in",
            "let $v25 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v24) in",
            "let $v26 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v25) in",
            "let $v27 = (rev_grid_elements $v26 $v9 $v10) in",
            "(rev_select_grid (lambda (eq? $0 $v1)) $v7 $v27)"
        ],
        [
            "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7 = (repeat_grid $v4 $v5 $v6) in",
            "let $v8, $v9, $v10 = rev($v3 = (rev_grid_elements $v8 $v9 $v10)) in",
            "let $v11 = rev($v8 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v11)) in",
            "let $v12 = rev($v11 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v12)) in",
            "let $v13, $v14, $v15 = rev($v12 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second $0) $v13)) $v14 $v15) $v13 (lambda Const(color, 3)))) in",
            "let $v16 = rev($v14 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v16)) in",
            "let $v17, $v18 = rev($v16 = (map_set (lambda (tuple2 $0 $v17)) $v18)) in",
            "let $v19 = Const(set(tuple2(int, int)), Set([(1, 2), (1, 1), (0, 1), (2, 1), (1, 0)])) in",
            "let $v20 = (map_set (lambda (tuple2_first $0)) $v18) in",
            "let $v21 = (map_set (lambda (tuple2 $0 $v19)) $v20) in",
            "let $v22 = (map_set (lambda (tuple2 $0 $v17)) $v21) in",
            "let $v23 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v22) in",
            "let $v24 = (rev_select_set (lambda (eq? (tuple2_second $0) $v13)) $v23 $v15) in",
            "let $v25 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v24) in",
            "let $v26 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (not (gt? (+ (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2))))) 1))) $0))) $1 $0))) empty_set $v25) in",
            "let $v27 = (rev_grid_elements $v26 $v9 $v10) in",
            "(rev_select_grid (lambda (eq? $0 $v1)) $v7 $v27)"
        ]
    ],
    "6e62d371.json": [
        [
            "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7 = (repeat_grid $v4 $v5 $v6) in",
            "let $v8, $v9, $v10 = rev($v3 = (rev_grid_elements $v8 $v9 $v10)) in",
            "let $v11 = rev($v8 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v11)) in",
            "let $v12 = rev($v11 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v12)) in",
            "let $v13, $v14, $v15 = rev($v12 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second $0) $v13)) $v14 $v15) $v13 (lambda Const(color, 7)))) in",
            "let $v16 = rev($v14 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v16)) in",
            "let $v17, $v18 = rev($v16 = (map_set (lambda (tuple2 $0 $v17)) $v18)) in",
            "let $v19 = Const(set(tuple2(int, int)), Set([(0, 0), (1, 2), (0, 2), (2, 0), (0, 1), (2, 2), (1, 0)])) in",
            "let $v20 = (map_set (lambda (tuple2_first $0)) $v18) in",
            "let $v21 = (map_set (lambda (tuple2 $0 $v19)) $v20) in",
            "let $v22 = (map_set (lambda (tuple2 $0 $v17)) $v21) in",
            "let $v23 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v22) in",
            "let $v24 = rev($v15 = (tuple2_second $v24)) in",
            "let $v25 = rev($v24 = (tuple2_second $v25)) in",
            "let $v26 = (tuple2_second $v25) in",
            "let $v27 = (tuple2_second $v26) in",
            "let $v28 = (rev_select_set (lambda (eq? (tuple2_second $0) $v13)) $v23 $v27) in",
            "let $v29 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v28) in",
            "let $v30 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v29) in",
            "let $v31 = (rev_grid_elements $v30 $v9 $v10) in",
            "(rev_select_grid (lambda (eq? $0 $v1)) $v7 $v31)"
        ]
    ],
    "21daab95.json": [
        [
            "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7 = (repeat_grid $v4 $v5 $v6) in",
            "let $v8, $v9, $v10 = rev($v3 = (rev_grid_elements $v8 $v9 $v10)) in",
            "let $v11 = rev($v8 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v11)) in",
            "let $v12 = rev($v11 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v12)) in",
            "let $v13, $v14, $v15 = rev($v12 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second $0) $v13)) $v14 $v15) $v13 (lambda Const(color, 1)))) in",
            "let $v16 = rev($v14 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v16)) in",
            "let $v17, $v18 = rev($v16 = (map_set (lambda (tuple2 $0 $v17)) $v18)) in",
            "let $v19 = Const(set(tuple2(int, int)), Set([(0, 0), (1, 2), (0, 2), (2, 0), (0, 1), (2, 2), (2, 1), (1, 0)])) in",
            "let $v20 = (map_set (lambda (tuple2_first $0)) $v18) in",
            "let $v21 = (map_set (lambda (tuple2 $0 $v19)) $v20) in",
            "let $v22 = (map_set (lambda (tuple2 $0 $v17)) $v21) in",
            "let $v23 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v22) in",
            "let $v24 = (rev_select_set (lambda (eq? (tuple2_second $0) $v13)) $v23 $v15) in",
            "let $v25 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v24) in",
            "let $v26 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v25) in",
            "let $v27 = (rev_grid_elements $v26 $v9 $v10) in",
            "(rev_select_grid (lambda (eq? $0 $v1)) $v7 $v27)"
        ],
        [
            "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7 = (repeat_grid $v4 $v5 $v6) in",
            "let $v8, $v9, $v10 = rev($v3 = (rev_grid_elements $v8 $v9 $v10)) in",
            "let $v11 = rev($v8 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v11)) in",
            "let $v12 = rev($v11 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v12)) in",
            "let $v13, $v14, $v15 = rev($v12 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second $0) $v13)) $v14 $v15) $v13 (lambda Const(color, 1)))) in",
            "let $v16 = rev($v14 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v16)) in",
            "let $v17, $v18 = rev($v16 = (map_set (lambda (tuple2 $0 $v17)) $v18)) in",
            "let $v19 = Const(set(tuple2(int, int)), Set([(0, 0), (1, 2), (0, 2), (2, 0), (0, 1), (2, 2), (2, 1), (1, 0)])) in",
            "let $v20 = (map_set (lambda (tuple2_first $0)) $v18) in",
            "let $v21 = (map_set (lambda (tuple2 $0 $v19)) $v20) in",
            "let $v22 = (map_set (lambda (tuple2 $0 $v17)) $v21) in",
            "let $v23 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v22) in",
            "let $v24 = rev($v15 = (tuple2_second $v24)) in",
            "let $v25 = rev($v24 = (tuple2_second $v25)) in",
            "let $v26 = (tuple2_second $v25) in",
            "let $v27 = (tuple2_second $v26) in",
            "let $v28 = (rev_select_set (lambda (eq? (tuple2_second $0) $v13)) $v23 $v27) in",
            "let $v29 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v28) in",
            "let $v30 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (not (gt? (+ (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2))))) 1))) $0))) $1 $0))) empty_set $v29) in",
            "let $v31 = (rev_grid_elements $v30 $v9 $v10) in",
            "(rev_select_grid (lambda (eq? $0 $v1)) $v7 $v31)"
        ]
    ],
    "22d4b83c.json": [
        [
            "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7 = (repeat_grid $v4 $v5 $v6) in",
            "let $v8, $v9, $v10 = rev($v3 = (rev_grid_elements $v8 $v9 $v10)) in",
            "let $v11 = rev($v8 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v11)) in",
            "let $v12 = rev($v11 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v12)) in",
            "let $v13 = rev($v12 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v13)) in",
            "let $v14, $v15, $v16 = rev($v13 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v14)) $v15 $v16) $v14 (lambda Const(set(tuple2(int, int)), Set([(0, 0), (1, 2), (1, 1), (2, 0), (0, 1), (2, 1), (1, 0)]))))) in",
            "let $v17 = Const(color, 9) in",
            "let $v18, $v19 = rev($v15 = (map_set (lambda (tuple2 $0 $v18)) $v19)) in",
            "let $v20 = (map_set (lambda (tuple2 $0 $v17)) $v19) in",
            "let $v21 = (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v14)) $v20 $v16) in",
            "let $v22 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v21) in",
            "let $v23 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v22) in",
            "let $v24 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v23) in",
            "let $v25 = (rev_grid_elements $v24 $v9 $v10) in",
            "(rev_select_grid (lambda (eq? $0 $v1)) $v7 $v25)"
        ]
    ],
    "25e3f90f.json": [
        [
            "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7, $v8, $v9 = rev($v3 = (rev_grid_elements $v7 $v8 $v9)) in",
            "let $v10 = rev($v7 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v10)) in",
            "let $v11 = rev($v10 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v11)) in",
            "let $v12 = rev($v11 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v12)) in",
            "let $v13, $v14, $v15 = rev($v12 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v13)) $v14 $v15) $v13 (lambda Const(set(tuple2(int, int)), Set([(0, 0), (0, 2), (2, 0), (1, 1), (0, 1), (2, 2), (2, 1)]))))) in",
            "let $v16 = Const(int, 1) in",
            "let $v17 = (map_set (lambda (tuple2 (tuple2 (tuple2 (+ (tuple2_first (tuple2_first (tuple2_first $0))) $v16) (tuple2_second (tuple2_first (tuple2_first $0)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v14) in",
            "let $v18 = (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v13)) $v17 $v15) in",
            "let $v19 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v18) in",
            "let $v20 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v19) in",
            "let $v21 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v20) in",
            "let $v22 = (rev_grid_elements $v21 $v8 $v9) in",
            "let $v23 = (repeat_grid $v4 $v5 $v6) in",
            "(rev_select_grid (lambda (eq? $0 $v1)) $v23 $v22)"
        ]
    ],
    "96a3789b.json": [
        [
            "let $v1, $v2, $v3 = rev($inp0 = (#(lambda (lambda (lambda (rev_fix_param (rev_select_grid (lambda (eq? $0 $3)) $1 $0) $2 (lambda Const(color, 0)))))) $v1 $v2 $v3)) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7 = (repeat_grid $v4 $v5 $v6) in",
            "let $v8, $v9, $v10 = rev($v3 = (#(lambda (lambda (lambda (rev_grid_elements (#(lambda (lambda (lambda (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- ($7 (tuple2_first $0)) ($7 (tuple2_first $2)))) 1)) (not (gt? (abs (- ($6 (tuple2_first $0)) ($6 (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $0))))) (lambda (tuple2_second $0)) (lambda (tuple2_first $0)) $2) $1 $0)))) $v8 $v9 $v10)) in",
            "let $v11, $v12, $v13 = rev($v8 = (#(lambda (lambda (lambda (rev_fix_param (#(lambda (lambda (lambda (rev_select_set (lambda (eq? (tuple2_second $0) $3)) $1 $0)))) $2 $1 $0) $2 (lambda Const(color, 1)))))) $v11 $v12 $v13)) in",
            "let $v14 = $v11 in",
            "let $v15, $v16 = rev($v12 = (#(lambda (lambda (#(lambda (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $0)) (map_set (lambda (tuple2 $0 $2)) $0)))) $v15 $v16)) in",
            "let $v17 = (#(lambda (lambda (#(lambda (lambda (lambda (#(lambda (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $0)) (map_set (lambda (tuple2 $0 $3)) (map_set (lambda (tuple2 $0 $2)) (map_set (lambda (tuple2_first $0)) $0))))))) $1 Const(set(tuple2(int, int)), Set([(0, 0), (1, 2), (0, 2), (2, 0), (0, 1), (2, 2), (2, 1), (1, 0)])) $0))) $v14 $v16) in",
            "let $v18 = (#(lambda (lambda (lambda (rev_select_set (lambda (eq? (tuple2_second $0) $3)) $1 $0)))) $v11 $v17 $v13) in",
            "let $v19 = (#(lambda (lambda (lambda (rev_grid_elements (#(lambda (lambda (lambda (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- ($7 (tuple2_first $0)) ($7 (tuple2_first $2)))) 1)) (not (gt? (abs (- ($6 (tuple2_first $0)) ($6 (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $0))))) (lambda (tuple2_second $0)) (lambda (tuple2_first $0)) $2) $1 $0)))) $v18 $v9 $v10) in",
            "(#(lambda (lambda (lambda (rev_select_grid (lambda (eq? $0 $3)) $1 $0)))) $v1 $v7 $v19)"
        ],
        [
            "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7 = (repeat_grid $v4 $v5 $v6) in",
            "let $v8, $v9, $v10 = rev($v3 = (rev_grid_elements $v8 $v9 $v10)) in",
            "let $v11 = rev($v8 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v11)) in",
            "let $v12 = rev($v11 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v12)) in",
            "let $v13, $v14, $v15 = rev($v12 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second $0) $v13)) $v14 $v15) $v13 (lambda Const(color, 1)))) in",
            "let $v16 = Const(set(tuple2(int, int)), Set([(0, 0), (1, 2), (0, 2), (2, 0), (0, 1), (2, 2), (2, 1), (1, 0)])) in",
            "let $v17 = rev($v14 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v17)) in",
            "let $v18, $v19 = rev($v17 = (map_set (lambda (tuple2 $0 $v18)) $v19)) in",
            "let $v20 = (map_set (lambda (tuple2_first $0)) $v19) in",
            "let $v21 = (map_set (lambda (tuple2 $0 $v16)) $v20) in",
            "let $v22 = (map_set (lambda (tuple2 $0 $v13)) $v21) in",
            "let $v23 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v22) in",
            "let $v24 = (rev_select_set (lambda (eq? (tuple2_second $0) $v13)) $v23 $v15) in",
            "let $v25 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v24) in",
            "let $v26 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v25) in",
            "let $v27 = (rev_grid_elements $v26 $v9 $v10) in",
            "(rev_select_grid (lambda (eq? $0 $v1)) $v7 $v27)"
        ]
    ],
    "102b44f9.json": [
        [
            "let $v1, $v2, $v3 = rev($inp0 = (#(lambda (lambda (lambda (rev_fix_param (rev_select_grid (lambda (eq? $0 $3)) $1 $0) $2 (lambda Const(color, 0)))))) $v1 $v2 $v3)) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7 = (repeat_grid $v4 $v5 $v6) in",
            "let $v13, $v9, $v10 = rev($v3 = (#(lambda (lambda (lambda (#(lambda (lambda (lambda (rev_grid_elements (#(lambda (lambda (lambda (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- ($7 (tuple2_first $0)) ($7 (tuple2_first $2)))) 1)) (not (gt? (abs (- ($6 (tuple2_first $0)) ($6 (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $0))))) (lambda (tuple2_second $0)) (lambda (tuple2_first $0)) $2) $1 $0)))) (#(lambda (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $0)) $2) $1 $0)))) $v13 $v9 $v10)) in",
            "let $v14, $v15, $v16 = rev($v13 = (rev_fix_param (#(lambda (lambda (lambda (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $3)) $1 $0)))) $v14 $v15 $v16) $v14 (lambda Const(set(tuple2(int, int)), Set([(0, 0), (1, 2), (0, 2), (1, 1), (0, 1), (2, 2), (2, 1), (1, 0)]))))) in",
            "let $v17, $v18 = rev($v15 = (adjoin $v17 $v18)) in",
            "let $v19, $v20 = rev($v17 = (tuple2 $v19 $v20)) in",
            "let $v21 = Const(color, 2) in",
            "let $v22 = (tuple2 $v19 $v21) in",
            "let $v23 = Const(set(tuple2(tuple2(tuple2(int, int), set(tuple2(int, int))), color)), Set{Any}()) in",
            "let $v24 = (adjoin $v22 $v23) in",
            "let $v25 = (#(lambda (lambda (lambda (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $3)) $1 $0)))) $v14 $v24 $v16) in",
            "let $v29 = (#(lambda (lambda (lambda (#(lambda (lambda (lambda (rev_grid_elements (#(lambda (lambda (lambda (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- ($7 (tuple2_first $0)) ($7 (tuple2_first $2)))) 1)) (not (gt? (abs (- ($6 (tuple2_first $0)) ($6 (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $0))))) (lambda (tuple2_second $0)) (lambda (tuple2_first $0)) $2) $1 $0)))) (#(lambda (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $0)) $2) $1 $0)))) $v25 $v9 $v10) in",
            "(#(lambda (lambda (lambda (rev_select_grid (lambda (eq? $0 $3)) $1 $0)))) $v1 $v7 $v29)"
        ],
        [
            "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7 = (repeat_grid $v4 $v5 $v6) in",
            "let $v8, $v9, $v10 = rev($v3 = (rev_grid_elements $v8 $v9 $v10)) in",
            "let $v11 = rev($v8 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v11)) in",
            "let $v12 = rev($v11 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v12)) in",
            "let $v13 = rev($v12 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v13)) in",
            "let $v14, $v15, $v16 = rev($v13 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v14)) $v15 $v16) $v14 (lambda Const(set(tuple2(int, int)), Set([(0, 0), (1, 2), (0, 2), (1, 1), (0, 1), (2, 2), (2, 1), (1, 0)]))))) in",
            "let $v17 = Const(color, 2) in",
            "let $v18, $v19 = rev($v15 = (map_set (lambda (tuple2 $0 $v18)) $v19)) in",
            "let $v20 = (map_set (lambda (tuple2 $0 $v17)) $v19) in",
            "let $v21 = (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v14)) $v20 $v16) in",
            "let $v22 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v21) in",
            "let $v23 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v22) in",
            "let $v24 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v23) in",
            "let $v25 = (rev_grid_elements $v24 $v9 $v10) in",
            "(rev_select_grid (lambda (eq? $0 $v1)) $v7 $v25)"
        ]
    ],
    "6c434453.json": [
        [
            "let $v22 = (cons $v20 $v21) in",
            "let $v24 = (rows_to_grid $v22) in",
            "(rev_select_grid (lambda (eq? $0 $v23)) $v24 $v25)"
        ]
    ],
    "4c4377d9.json": [
        [
            "let $v1 = rev($inp0 = (rows_to_grid $v1)) in",
            "let $v2 = rev($v1 = (reverse $v2)) in",
            "let $v3 = rev($v1 = (rows $v3)) in",
            "let $v4 = rev($v3 = (rows_to_grid $v4)) in",
            "let $v6 = (#(lambda (lambda (rows_to_grid (concat $1 $0)))) $v2 $v4) in",
            "let $v66 = $v6 in",
            "let $v7 = (rows $v66) in",
            "let $v8 = (rows_to_grid $v7) in",
            "let $v9 = (columns $v8) in",
            "let $v10 = (columns_to_grid $v9) in",
            "let $v11 = (zip_grid2 $v10 $v6) in",
            "(map_grid (lambda (tuple2_first $0)) $v11)"
        ]
    ],
    "25ff71a9.json": [
        [
            "let $v1 = rev($inp0 = (rows_to_grid $v1)) in",
            "let $v2, $v3 = rev($v1 = (cons $v2 $v3)) in",
            "let $v4, $v5 = rev($v3 = (cons $v4 $v5)) in",
            "let $v6 = rev($v1 = (reverse $v6)) in",
            "let $v7, $v8 = rev($v6 = (cons $v7 $v8)) in",
            "let $v9 = (reverse $v8) in",
            "let $v10 = $v9 in",
            "let $v11 = (concat $v5 $v9) in",
            "let $v12 = (reverse $v11) in",
            "(#(lambda (rows_to_grid (reverse $0))) $v12)"
        ]
    ],
    "3c9b0459.json": [
        [
            "let $v2 = rev($inp0 = (#(lambda (rows_to_grid (reverse $0))) $v2)) in",
            "let $v3 = rev($v2 = (rows $v3)) in",
            "let $v4 = (columns $v3) in",
            "let $v5 = (reverse $v4) in",
            "let $v7 = (#(lambda (columns (columns_to_grid $0))) $v5) in",
            "let $v8 = (rows_to_grid $v7) in",
            "let $v10 = (#(lambda (rows_to_grid (columns $0))) $v8) in",
            "let $v11 = (rows $v10) in",
            "(rows_to_grid $v11)"
        ]
    ],
    "74dd1130.json": [
        [
            "let $v1 = rev($inp0 = (rows_to_grid $v1)) in",
            "let $v2 = rev($v1 = (columns $v2)) in",
            "$v2"
        ]
    ],
    "c9e6f938.json": [
        [
            "let $v1 = rev($inp0 = (columns_to_grid $v1)) in",
            "let $v2, $v3 = rev($v1 = (cons $v2 $v3)) in",
            "let $v4, $v5 = rev($v1 = (cons $v4 $v5)) in",
            "let $v6 = rev($v1 = (reverse $v6)) in",
            "let $v7 = (concat $v5 $v6) in",
            "let $v8 = (cons $v2 $v7) in",
            "(columns_to_grid $v8)"
        ]
    ],
    "6fa7a44f.json": [
        [
            "let $v1 = rev($inp0 = (rows_to_grid $v1)) in",
            "let $v2 = rev($v1 = (reverse $v2)) in",
            "let $v4 = (#(lambda (lambda (rows_to_grid (concat $1 $0)))) $v1 $v2) in",
            "let $v5 = $v4 in",
            "let $v6 = (columns $v4) in",
            "let $v7 = (columns_to_grid $v6) in",
            "let $v8 = (zip_grid2 $v5 $v7) in",
            "(map_grid (lambda (tuple2_first $0)) $v8)"
        ],
        [
            "let $v1 = rev($inp0 = (map_grid (lambda (tuple2_first $0)) $v1)) in",
            "let $v2, $v3 = rev($v1 = (zip_grid2 $v2 $v3)) in",
            "let $v4 = rev($v2 = (rows_to_grid $v4)) in",
            "let $v5 = rev($inp0 = (rows_to_grid $v5)) in",
            "let $v6 = rev($v5 = (rows $v6)) in",
            "let $v7 = rev($v6 = (rows_to_grid $v7)) in",
            "let $v8 = rev($v7 = (reverse $v8)) in",
            "let $v9 = (concat $v4 $v8) in",
            "let $v10 = (rows_to_grid $v9) in",
            "let $v11 = (columns $v10) in",
            "let $v12 = (columns_to_grid $v11) in",
            "let $v13 = $v10 in",
            "let $v14 = (zip_grid2 $v12 $v13) in",
            "(map_grid (lambda (tuple2_first $0)) $v14)"
        ],
        [
            "let $v4, $v3 = rev($inp0 = (#(lambda (lambda (map_grid (lambda (tuple2_first $0)) (zip_grid2 (rows_to_grid $1) $0)))) $v4 $v3)) in",
            "let $v6 = rev($inp0 = (#(lambda (rows_to_grid (reverse $0))) $v6)) in",
            "let $v8 = (#(lambda (lambda (rows_to_grid (concat $1 $0)))) $v4 $v6) in",
            "let $v10 = (#(lambda (columns_to_grid (columns $0))) $v8) in",
            "let $v11 = (zip_grid2 $v10 $v8) in",
            "(map_grid (lambda (tuple2_first $0)) $v11)"
        ]
    ],
    "67a3c6ac.json": [
        [
            "let $v1 = rev($inp0 = (columns_to_grid $v1)) in",
            "let $v2 = rev($v1 = (reverse $v2)) in",
            "let $v3 = (columns_to_grid $v2) in",
            "let $v4 = $v3 in",
            "let $v5 = (zip_grid2 $v4 $v3) in",
            "(map_grid (lambda (tuple2_first $0)) $v5)"
        ]
    ],
    "8be77c9e.json": [
        [
            "let $v1 = Const(list(list(color)), Vector{Any}[]) in",
            "let $v2, $v3 = rev($inp0 = (rev_fix_param (#(lambda (lambda (rows_to_grid (concat $1 $0)))) $v2 $v3) $v3 (lambda Const(list(list(color)), Vector{Any}[])))) in",
            "let $v4 = rev($inp0 = (#(lambda (rows_to_grid (reverse $0))) $v4)) in",
            "let $v5 = (concat $v2 $v4) in",
            "(#(lambda (lambda (rows_to_grid (concat $1 $0)))) $v1 $v5)"
        ]
    ],
    "46442a0e.json": [
        [
            "let $v1 = rev($inp0 = (#(lambda (#(lambda (rows_to_grid (reverse $0))) (columns $0))) $v1)) in",
            "let $v2 = rev($v1 = (#(lambda (rows_to_grid (rows (columns_to_grid $0)))) $v2)) in",
            "let $v3 = rev($v2 = (reverse $v3)) in",
            "let $v4, $v5 = rev($inp0 = (rev_fix_param (#(lambda (lambda (columns_to_grid (concat $1 $0)))) $v4 $v5) $v5 (lambda Const(list(list(color)), Vector{Any}[])))) in",
            "let $v6 = rev($v4 = (reverse $v6)) in",
            "let $v7 = (#(lambda (lambda (columns (#(lambda (lambda (rows_to_grid (concat $1 $0)))) $1 $0)))) $v3 $v6) in",
            "let $v8 = rev($v1 = (rows_to_grid $v8)) in",
            "let $v9 = rev($inp0 = (#(lambda (#(lambda (#(lambda (columns_to_grid (reverse $0))) (rows $0))) (#(lambda (#(lambda (columns_to_grid (reverse $0))) (rows $0))) $0))) $v9)) in",
            "let $v10 = rev($v9 = (rows_to_grid $v10)) in",
            "(#(lambda (lambda (lambda (#(lambda (lambda (columns_to_grid (concat $1 $0)))) $2 (#(lambda (lambda (columns (#(lambda (lambda (rows_to_grid (concat $1 $0)))) $1 $0)))) $1 $0))))) $v7 $v8 $v10)"
        ]
    ],
    "496994bd.json": [
        [
            "let $v1, $v2, $v3 = rev($inp0 = (#(lambda (lambda (lambda (rows_to_grid (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $2 $1 $0))))) $v1 $v2 $v3)) in",
            "let $v4, $v5 = rev($v1 = (rev_list_elements $v4 $v5)) in",
            "let $v6 = rev($inp0 = (columns_to_grid $v6)) in",
            "let $v7, $v8 = rev($v6 = (repeat $v7 $v8)) in",
            "let $v9 = rev($v8 = (tuple2_first $v9)) in",
            "let $v10 = (tuple2_first $v9) in",
            "let $v11 = (rev_list_elements $v4 $v10) in",
            "let $v12, $v13, $v14 = rev($v7 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v12 $v13 $v14)) in",
            "let $v16, $v17 = rev($inp0 = (#(lambda (lambda (#(lambda (rows_to_grid (reverse $0))) (cons $1 $0)))) $v16 $v17)) in",
            "let $v18, $v19 = rev($v16 = (rev_list_elements $v18 $v19)) in",
            "let $v20 = (repeat $v13 $v19) in",
            "let $v22, $v23, $v24 = rev($inp0 = (#(lambda (lambda (lambda (rows_to_grid (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $2 $1 $0))))) $v22 $v23 $v24)) in",
            "let $v25, $v26, $v27 = rev($v24 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v25 $v26 $v27)) in",
            "let $v28, $v29, $v30 = rev($v17 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v28 $v29 $v30)) in",
            "let $v31 = (cons $v25 $v30) in",
            "let $v32 = (cons $v20 $v31) in",
            "let $v33 = (#(lambda (lambda (rows (columns_to_grid (cons $1 $0))))) $v11 $v32) in",
            "(columns_to_grid $v33)"
        ],
        [
            "let $v1, $v2, $v3 = rev($inp0 = (#(lambda (lambda (lambda (rows_to_grid (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $2 $1 $0))))) $v1 $v2 $v3)) in",
            "let $v4, $v5 = rev($v1 = (rev_list_elements $v4 $v5)) in",
            "let $v6 = rev($inp0 = (columns_to_grid $v6)) in",
            "let $v7, $v8 = rev($v6 = (repeat $v7 $v8)) in",
            "let $v9 = rev($v8 = (tuple2_first $v9)) in",
            "let $v10 = (tuple2_first $v9) in",
            "let $v11 = (rev_list_elements $v4 $v10) in",
            "let $v12, $v13, $v14 = rev($inp0 = (#(lambda (lambda (lambda (rev_fix_param (rev_select_grid (lambda (eq? $0 $3)) $1 $0) $2 (lambda Const(color, 0)))))) $v12 $v13 $v14)) in",
            "let $v15, $v16, $v17 = rev($v14 = (#(lambda (lambda (lambda (rows_to_grid (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $2 $1 $0))))) $v15 $v16 $v17)) in",
            "let $v18, $v19, $v20 = rev($v16 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v18 $v19 $v20)) in",
            "let $v21 = rev($inp0 = (#(lambda (rows_to_grid (reverse $0))) $v21)) in",
            "let $v22, $v23 = rev($v21 = (cons $v22 $v23)) in",
            "let $v24, $v25 = rev($v22 = (rev_list_elements $v24 $v25)) in",
            "let $v26 = (repeat $v19 $v25) in",
            "let $v27 = rev($inp0 = (rows_to_grid $v27)) in",
            "let $v28, $v29, $v30 = rev($v27 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v28 $v29 $v30)) in",
            "let $v31, $v32, $v33 = rev($v30 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v31 $v32 $v33)) in",
            "let $v34, $v35, $v36 = rev($v23 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v34 $v35 $v36)) in",
            "let $v37 = (cons $v31 $v36) in",
            "let $v38 = (cons $v26 $v37) in",
            "let $v39 = (#(lambda (lambda (rows (columns_to_grid (cons $1 $0))))) $v11 $v38) in",
            "(columns_to_grid $v39)"
        ],
        [
            "let $v1, $v2, $v3 = rev($inp0 = (#(lambda (lambda (lambda (rows_to_grid (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $2 $1 $0))))) $v1 $v2 $v3)) in",
            "let $v4, $v5 = rev($v1 = (rev_list_elements $v4 $v5)) in",
            "let $v6 = rev($inp0 = (columns_to_grid $v6)) in",
            "let $v7, $v8 = rev($v6 = (repeat $v7 $v8)) in",
            "let $v9 = rev($v8 = (tuple2_first $v9)) in",
            "let $v10 = (tuple2_first $v9) in",
            "let $v11 = (rev_list_elements $v4 $v10) in",
            "let $v12, $v13, $v14 = rev($inp0 = (#(lambda (lambda (lambda (rev_fix_param (rev_select_grid (lambda (eq? $0 $3)) $1 $0) $2 (lambda Const(color, 0)))))) $v12 $v13 $v14)) in",
            "let $v15, $v16, $v17 = rev($v14 = (#(lambda (lambda (lambda (rows_to_grid (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $2 $1 $0))))) $v15 $v16 $v17)) in",
            "let $v18, $v19, $v20 = rev($v16 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v18 $v19 $v20)) in",
            "let $v22, $v23 = rev($inp0 = (#(lambda (lambda (#(lambda (rows_to_grid (reverse $0))) (cons $1 $0)))) $v22 $v23)) in",
            "let $v24, $v25 = rev($v22 = (rev_list_elements $v24 $v25)) in",
            "let $v26 = (repeat $v19 $v25) in",
            "let $v28, $v29, $v30 = rev($inp0 = (#(lambda (lambda (lambda (rows_to_grid (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $2 $1 $0))))) $v28 $v29 $v30)) in",
            "let $v31, $v32, $v33 = rev($v30 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v31 $v32 $v33)) in",
            "let $v34, $v35, $v36 = rev($v23 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v34 $v35 $v36)) in",
            "let $v37 = (cons $v31 $v36) in",
            "let $v38 = (cons $v26 $v37) in",
            "let $v39 = (#(lambda (lambda (rows (columns_to_grid (cons $1 $0))))) $v11 $v38) in",
            "(columns_to_grid $v39)"
        ],
        [
            "let $v1, $v2, $v3 = rev($inp0 = (#(lambda (lambda (lambda (rows_to_grid (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $2 $1 $0))))) $v1 $v2 $v3)) in",
            "let $v4, $v5 = rev($v1 = (rev_list_elements $v4 $v5)) in",
            "let $v7, $v8 = rev($inp0 = (#(lambda (lambda (#(lambda (rows_to_grid (reverse $0))) (cons $1 $0)))) $v7 $v8)) in",
            "let $v9, $v10 = rev($v7 = (rev_list_elements $v9 $v10)) in",
            "let $v11 = (rev_list_elements $v4 $v10) in",
            "let $v12, $v13, $v14 = rev($inp0 = (#(lambda (lambda (lambda (rev_fix_param (rev_select_grid (lambda (eq? $0 $3)) $1 $0) $2 (lambda Const(color, 0)))))) $v12 $v13 $v14)) in",
            "let $v15, $v16, $v17 = rev($v14 = (#(lambda (lambda (lambda (rows_to_grid (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $2 $1 $0))))) $v15 $v16 $v17)) in",
            "let $v18, $v19, $v20 = rev($v16 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v18 $v19 $v20)) in",
            "let $v21 = $v10 in",
            "let $v22 = (repeat $v19 $v21) in",
            "let $v24, $v25, $v26 = rev($inp0 = (#(lambda (lambda (lambda (rows_to_grid (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $2 $1 $0))))) $v24 $v25 $v26)) in",
            "let $v27, $v28, $v29 = rev($v26 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v27 $v28 $v29)) in",
            "let $v30, $v31, $v32 = rev($v8 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v30 $v31 $v32)) in",
            "let $v33 = (cons $v27 $v32) in",
            "let $v34 = (cons $v22 $v33) in",
            "let $v35 = (#(lambda (lambda (rows (columns_to_grid (cons $1 $0))))) $v11 $v34) in",
            "(columns_to_grid $v35)"
        ]
    ],
    "6150a2bd.json": [
        [
            "let $v1 = Const(color, 0) in",
            "let $v2 = rev($v1 = (tuple2_first $v2)) in",
            "let $v3 = (tuple2_first $v2) in",
            "let $v4 = Const(color, 0) in",
            "let $v5, $v6, $v7 = rev($inp0 = (#(lambda (lambda (lambda (columns_to_grid (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $2 $1 $0))))) $v5 $v6 $v7)) in",
            "let $v8, $v9, $v10 = rev($v5 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v8 $v9 $v10)) in",
            "let $v11 = (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $v3 $v4 $v10) in",
            "let $v16, $v13, $v14 = rev($inp0 = (#(lambda (lambda (lambda (#(lambda (lambda (lambda (rows_to_grid (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $2 $1 $0))))) (reverse $2) $1 $0)))) $v16 $v13 $v14)) in",
            "let $v15 = (reverse $v13) in",
            "let $v18 = (#(lambda (cons $0 Const(list(list(color)), Vector{Any}[]))) $v16) in",
            "(#(lambda (lambda (lambda (rows_to_grid (#(lambda (lambda (lambda (cons $2 (cons $1 $0))))) $2 $1 $0))))) $v11 $v15 $v18)"
        ]
    ],
    "68b16354.json": [
        [
            "let $v1 = rev($inp0 = (#(lambda (rows_to_grid (reverse (rows $0)))) $v1)) in",
            "let $v3 = Const(list(list(color)), Vector{Any}[]) in",
            "(#(lambda (lambda (#(lambda (lambda (columns_to_grid (concat $1 $0)))) (columns $1) $0))) $v1 $v3)"
        ]
    ],
    "Copy1.json": [
        [
            "let $v1 = (columns $inp0) in",
            "let $v2 = rev($v1 = (rows $v2)) in",
            "let $v3 = (rows $v2) in",
            "(#(lambda (lambda (columns_to_grid (concat $1 $0)))) $v3 $v1)"
        ]
    ],
    "62c24649.json": [
        [
            "let $v1 = (rows $inp0) in",
            "let $v2 = $v1 in",
            "let $v3 = (reverse $v2) in",
            "(#(lambda (lambda (#(lambda (lambda (columns_to_grid (concat $1 $0)))) (rows (#(lambda (lambda (columns_to_grid (concat $1 $0)))) $1 $0)) (reverse (rows (#(lambda (lambda (columns_to_grid (concat $1 $0)))) $1 $0)))))) $v1 $v3)"
        ],
        [
            "let $v1 = (rows $inp0) in",
            "let $v2 = $v1 in",
            "let $v3 = (reverse $v2) in",
            "(#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (columns_to_grid (concat $1 $0)))) (rows (#(lambda (lambda (columns_to_grid (concat $1 $0)))) $1 $0)) (reverse (rows (#(lambda (lambda (columns_to_grid (concat $1 $0)))) $1 $0)))))) (rows $1) $0))) $inp0 $v3)"
        ]
    ],
    "8d5021e8.json": [
        [
            "let $v1 = rev($inp0 = (#(lambda (columns_to_grid (columns (columns_to_grid $0)))) $v1)) in",
            "let $v2 = rev($v1 = (#(lambda (reverse (rows $0))) $v2)) in",
            "let $v3 = (#(lambda (reverse (columns $0))) $v2) in",
            "let $v4 = rev($inp0 = (#(lambda (#(lambda (columns_to_grid (#(lambda (reverse (columns $0))) $0))) (#(lambda (rows_to_grid (reverse $0))) $0))) $v4)) in",
            "let $v5 = $v4 in",
            "let $v6 = rev($v5 = (columns $v6)) in",
            "let $v7 = (#(lambda (reverse (columns $0))) $v6) in",
            "let $v8 = (concat $v3 $v7) in",
            "let $v9 = (#(lambda (lambda (columns (#(lambda (lambda (rows_to_grid (concat $1 $0)))) $1 $0)))) $v8 $v4) in",
            "(#(lambda (#(lambda (lambda (columns_to_grid (concat $1 $0)))) $0 (reverse $0))) $v9)"
        ],
        [
            "let $v14 = rev($v1 = (#(lambda (columns_to_grid (columns (columns_to_grid $0)))) $v14)) in",
            "let $v51 = rev($v14 = (#(lambda (reverse (rows $0))) $v51)) in",
            "let $v798 = $v51 in",
            "let $v401 = (#(lambda (reverse (columns $0))) $v798) in",
            "let $v4 = rev($v1 = (#(lambda (#(lambda (columns_to_grid (#(lambda (reverse (columns $0))) $0))) (#(lambda (rows_to_grid (reverse $0))) $0))) $v4)) in",
            "let $v21 = $v4 in",
            "let $v549 = rev($v21 = (columns $v549)) in",
            "let $v958 = $v549 in",
            "let $v402 = (#(lambda (reverse (columns $0))) $v958) in",
            "let $v71 = (concat $v401 $v402) in",
            "let $v72 = $v4 in",
            "let $v7 = (#(lambda (lambda (columns (#(lambda (lambda (rows_to_grid (concat $1 $0)))) $1 $0)))) $v71 $v72) in",
            "(#(lambda (#(lambda (lambda (columns_to_grid (concat $1 $0)))) $0 (reverse $0))) $v7)"
        ]
    ],
    "f25ffba3.json": [
        [
            "let $v1 = Const(list(list(color)), Vector{Any}[]) in",
            "let $v2 = $v1 in",
            "let $v3, $v4 = rev($inp0 = (rev_fix_param (#(lambda (lambda (rows_to_grid (concat $1 $0)))) $v3 $v4) $v3 (lambda Const(list(list(color)), Vector{Any}[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]])))) in",
            "let $v5, $v6 = rev($v4 = (cons $v5 $v6)) in",
            "let $v7 = (reverse $v6) in",
            "let $v8 = (#(lambda (#(lambda (lambda (columns_to_grid (concat $1 $0)))) $0 (reverse $0))) $v7) in",
            "let $v9 = (rows $v8) in",
            "let $v10 = (#(lambda (lambda (rows (#(lambda (lambda (columns_to_grid (concat $1 $0)))) $1 $0)))) $v2 $v9) in",
            "(#(lambda (lambda (rows_to_grid (concat $1 $0)))) $v1 $v10)"
        ],
        [
            "((lambda (lambda (lambda ((lambda (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $0)) (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $3)) (map_set (lambda (tuple2 (tuple2 (tuple2 (+ (tuple2_first (tuple2_first (tuple2_first $0))) Const(int, 1)) (tuple2_second (tuple2_first (tuple2_first $0)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $1) $0))))) $v451 $v452 $v453)"
        ]
    ],
    "11868b19.json": [
        [
            "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7, $v8, $v9 = rev($v3 = (rev_grid_elements $v7 $v8 $v9)) in",
            "let $v10 = rev($v7 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v10)) in",
            "let $v11 = rev($v10 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v11)) in",
            "let $v12 = rev($v11 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v12)) in",
            "let $v13, $v14, $v15 = rev($v12 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v13)) $v14 $v15) $v13 (lambda Const(set(tuple2(int, int)), Set([(1, 2), (1, 1), (0, 1), (2, 1), (1, 0)]))))) in",
            "let $v16, $v42 = rev($v14 = (map_set (lambda (tuple2 $0 $v16)) $v42)) in",
            "let $v17 = (map_set (lambda (tuple2 $0 $v36)) $v35) in",
            "let $v18 = (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v13)) $v17 $v15) in",
            "let $v19 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v18) in",
            "let $v20 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v19) in",
            "let $v21 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v20) in",
            "let $v22 = (rev_grid_elements $v21 $v8 $v9) in",
            "let $v23 = (repeat_grid $v4 $v5 $v6) in",
            "(rev_select_grid (lambda (eq? $0 $v1)) $v23 $v22)"
        ]
    ],
    "3064e575.json": [
        [
            "let $v1, $v2, $v3 = rev($inp0 = (rev_fix_param (rev_select_grid (lambda (eq? $0 $v1)) $v2 $v3) $v1 (lambda Const(color, 0)))) in",
            "let $v4, $v5, $v6 = rev($v2 = (repeat_grid $v4 $v5 $v6)) in",
            "let $v7, $v8, $v9 = rev($v3 = (rev_grid_elements $v7 $v8 $v9)) in",
            "let $v10 = rev($v7 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v10)) in",
            "let $v11 = rev($v10 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v11)) in",
            "let $v12 = rev($v11 = (map_set (lambda (tuple2 ((lambda ((lambda (rev_fix_param (map_set (lambda (tuple2 (+ (tuple2_first $0) (tuple2_first $1)) (+ (tuple2_second $0) (tuple2_second $1)))) $1) $0 (lambda (tuple2 (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_first $0)) (collect $0)) max_int) (fold (lambda (lambda (if (gt? $0 $1) $1 $0))) (map (lambda (tuple2_second $0)) (collect $0)) max_int))))) (tuple2_first (tuple2_first $1)))) (tuple2_second (tuple2_first $0))) (tuple2_second $0))) $v12)) in",
            "let $v13, $v14, $v15 = rev($v12 = (rev_fix_param (rev_select_set (lambda (eq? (tuple2_second (tuple2_first $0)) $v13)) $v14 $v15) $v13 (lambda Const(set(tuple2(int, int)), Set([(0, 0), (1, 2), (0, 2), (2, 0), (1, 1), (2, 2), (2, 1)]))))) in",
            "let $v20 = (map_set (lambda (map_set (lambda (tuple2 $0 (tuple2_second $1))) (tuple2_first $0))) $v19) in",
            "let $v21 = (rev_fold_set (lambda (lambda (rev_greedy_cluster (lambda (lambda (any_set (lambda (and (not (gt? (abs (- (tuple2_first (tuple2_first $0)) (tuple2_first (tuple2_first $2)))) 1)) (not (gt? (abs (- (tuple2_second (tuple2_first $0)) (tuple2_second (tuple2_first $2)))) 1)))) $0))) $1 $0))) empty_set $v20) in",
            "let $v22 = (rev_grid_elements $v21 $v8 $v9) in",
            "let $v23 = (repeat_grid $v4 $v5 $v6) in",
            "(rev_select_grid (lambda (eq? $0 $v1)) $v23 $v22)"
        ]
    ]
}
